version: '3.4'

services:

  postgres:
    image: postgres:12
    restart: always
    logging:
      driver: none
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: apartmentsDb
      PGPORT: 5433
    ports:
      - "5433:5433"
    volumes:
      - /docker/volumes/postgres:/var/lib/postgresql/data

  eu-server:
    build:
      context: eu-server
      dockerfile: Dockerfile
    ports:
        - "8761:8761"

  conf-server:
    build:
      context: conf-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      WAITFORIT_HOST: eu-server
      WAITFORIT_PORT: 8761
      WAITFOTIT_TIMEOUT: 60
    depends_on:
      - eu-server

  service:
    build:
      context: eu-client
      dockerfile: Dockerfile
    ports:
      - "8081-8082:8081"
    environment:
      WAITFORIT_HOST: conf-server
      WAITFORIT_PORT: 8888
      WAITFORIT_TIMEOUT: 120
    depends_on:
      - eu-server
      - postgres
      - conf-server

  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      WAITFORIT_HOST: service
      WAITFORIT_PORT: 8081
      WAITFORIT_TIMEOUT: 120
    depends_on:
      - eu-server
      - service
      - conf-server

  kafka-consumer:
    build:
      context: kafka-consumer
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      WAITFORIT_HOST: kafka
      WAITFORIT_PORT: 9092
      WAITFORIT_TIMEOUT: 120

  rabbit:
    image: rabbitmq:3
    ports:
      - "15672:15672"
      - "5672:5672"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
      - "9080:9080"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
       - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "create.entity:3:1,update.entity:3:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - "zookeeper"
